{
    "swagger": "2.0",
    "info": {
        "description": "API documentation for the GoFemart backend service.",
        "title": "GoFemart API",
        "contact": {
            "name": "API Support",
            "url": "https://github.com/FlyKarlik/gofemart",
            "email": "nikitasavin191@gmail.com"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api",
    "paths": {
        "/api/user/balance": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves the current balance and total amount withdrawn by the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balance"
                ],
                "summary": "Get user balance",
                "responses": {
                    "200": {
                        "description": "Successful response with balance data",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponseBalance"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponseAny"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponseAny"
                        }
                    }
                }
            }
        },
        "/api/user/balance/withdraw": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deducts the specified amount from the user's balance for the given order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balance"
                ],
                "summary": "Withdraw user balance",
                "parameters": [
                    {
                        "description": "Withdrawal request",
                        "name": "withdrawal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/response.WitdrawalUserBalanceInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Withdrawal successful",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponseAny"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponseAny"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponseAny"
                        }
                    },
                    "402": {
                        "description": "Insufficient funds",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponseAny"
                        }
                    },
                    "422": {
                        "description": "Invalid order number format",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponseAny"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponseAny"
                        }
                    }
                }
            }
        },
        "/api/user/login": {
            "post": {
                "description": "Verifies user credentials and returns JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful authentication",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponseLogin"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponseAny"
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponseAny"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponseAny"
                        }
                    }
                }
            }
        },
        "/api/user/orders": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all orders uploaded by the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Get user's orders",
                "responses": {
                    "200": {
                        "description": "Successful response with orders",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponseOrders"
                        }
                    },
                    "204": {
                        "description": "No orders found for user"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponseAny"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponseAny"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Accepts a plain text order number and processes it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Upload user order",
                "parameters": [
                    {
                        "description": "Order number",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserOrderInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order already uploaded by this user",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponseAny"
                        }
                    },
                    "202": {
                        "description": "New order accepted for processing"
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponseAny"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponseAny"
                        }
                    },
                    "409": {
                        "description": "Order already uploaded by another user",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponseAny"
                        }
                    },
                    "422": {
                        "description": "Invalid order number format",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponseAny"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponseAny"
                        }
                    }
                }
            }
        },
        "/api/user/register": {
            "post": {
                "description": "Creates a new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User registration",
                "parameters": [
                    {
                        "description": "Registration data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully processed request",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponseAny"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid input params",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponseAny"
                        }
                    },
                    "409": {
                        "description": "Conflict - user login in use",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponseAny"
                        }
                    },
                    "500": {
                        "description": "Internal system error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponseAny"
                        }
                    }
                }
            }
        },
        "/api/user/withdrawals": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a list of all user's balance withdrawals",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balance"
                ],
                "summary": "Get user withdrawals",
                "responses": {
                    "200": {
                        "description": "Successful response with withdrawal history",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponseWithdrawals"
                        }
                    },
                    "204": {
                        "description": "No withdrawals found"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponseAny"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponseAny"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.OrderStatusEnum": {
            "type": "string",
            "enum": [
                "NEW",
                "PROCESSING",
                "INVALID",
                "PROCESSED"
            ],
            "x-enum-varnames": [
                "OrderStatusEnumNew",
                "OrderStatusEnumProcessing",
                "OrderStatusEnumInvalid",
                "OrderStatusEnumProcessed"
            ]
        },
        "model.UserInput": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "model.UserOrder": {
            "type": "object",
            "properties": {
                "accural": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/model.OrderStatusEnum"
                },
                "uploaded_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.UserOrderInput": {
            "type": "object",
            "required": [
                "number"
            ],
            "properties": {
                "number": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/model.OrderStatusEnum"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "response.BaseResponseAny": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "response.BaseResponseBalance": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/response.UserBalanceBalance"
                },
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "response.BaseResponseLogin": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "token": {
                            "type": "string"
                        }
                    }
                },
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "response.BaseResponseOrders": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UserOrder"
                    }
                },
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "response.BaseResponseWithdrawals": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.UserWithdrawalData"
                    }
                },
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "response.UserBalanceBalance": {
            "type": "object",
            "properties": {
                "current": {
                    "type": "number"
                },
                "user_id": {
                    "type": "string"
                },
                "withdrawn": {
                    "type": "number"
                }
            }
        },
        "response.UserWithdrawalData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "order_number": {
                    "type": "string"
                },
                "processed_at": {
                    "type": "string"
                },
                "sum": {
                    "type": "number"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "response.WitdrawalUserBalanceInput": {
            "type": "object",
            "required": [
                "order_number",
                "sum"
            ],
            "properties": {
                "order_number": {
                    "type": "string"
                },
                "sum": {
                    "type": "number"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}